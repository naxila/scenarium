const { AnalyticsInterface } = require('../dist/index');

// –ü—Ä–∏–º–µ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è
const exampleScenario = {
  onStartActions: [
    {
      action: 'SendMessage',
      text: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã'
    }
  ],
  menuItems: {
    Main: {
      text: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
      actions: [
        {
          action: 'SendMessage',
          text: '–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é'
        }
      ]
    },
    Help: {
      text: '–ü–æ–º–æ—â—å',
      actions: [
        {
          action: 'SendMessage',
          text: '–≠—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
        }
      ]
    }
  }
};

// –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
const bot = new AnalyticsInterface({
  token: 'YOUR_BOT_TOKEN_HERE', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
  scenario: exampleScenario,
  botName: 'AnalyticsBot',
  callbacks: {
    onMessageReceived: (userId, message, messageData) => {
      console.log(`üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${userId}: ${message}`);
      console.log('üìä –î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', messageData);
      
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –≤–∞—à—É —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
      // –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ API:
      // analyticsAPI.track('message_received', { userId, message, timestamp: new Date() });
    },
    
    onMessageSent: (userId, message, messageData) => {
      console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}: ${message}`);
      console.log('üìä –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∫–∏:', messageData);
      
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –≤–∞—à—É —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
      // –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ API:
      // analyticsAPI.track('message_sent', { userId, message, timestamp: new Date() });
    },
    
    onUserStarted: (userId, userData) => {
      console.log(`üöÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º`);
      console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData);
      
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –≤–∞—à—É —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
      // –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ API:
      // analyticsAPI.track('user_started', { userId, userData, timestamp: new Date() });
    },
    
    onUserAction: (userId, action, actionData) => {
      console.log(`üéØ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ: ${action}`);
      console.log('üìä –î–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:', actionData);
      
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –≤–∞—à—É —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
      // –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ API:
      // analyticsAPI.track('user_action', { userId, action, actionData, timestamp: new Date() });
    },
    
    onError: (error, context) => {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ:`, error);
      console.error('üìä –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:', context);
      
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –æ—à–∏–±–∫–∞—Ö –≤ –≤–∞—à—É —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
      // –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ API:
      // analyticsAPI.track('bot_error', { error: error.message, context, timestamp: new Date() });
    }
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async function startBot() {
  try {
    await bot.start();
    console.log('‚úÖ –ë–æ—Ç —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∑–∞–ø—É—â–µ–Ω!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error);
  }
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
async function stopBot() {
  try {
    await bot.stop();
    console.log('‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞:', error);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', async () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...');
  await stopBot();
  process.exit(0);
});

process.on('SIGTERM', async () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...');
  await stopBot();
  process.exit(0);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
startBot();
